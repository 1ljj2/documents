<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.jit.sose.mapper.ArchiveAuditMapper">
    <resultMap id="BaseResultMap" type="org.jit.sose.domain.entity.ArchiveAudit">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="par_id" property="parId" jdbcType="INTEGER"/>
        <result column="example_id" property="exampleId" jdbcType="INTEGER"/>
        <result column="audit_user_id" property="auditUserId" jdbcType="INTEGER"/>
        <result column="step_id" property="stepId" jdbcType="INTEGER"/>
        <result column="audit_state" property="auditState" jdbcType="CHAR"/>
        <result column="audit_opinion" property="auditOpinion" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="CHAR"/>
        <result column="state_time" property="stateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, par_id, example_id, audit_user_id, step_id, audit_state, audit_opinion, state, 
    state_time
  </sql>


    <insert id="addAuditRecord" parameterType="java.util.Map">
        insert into t_archive_audit
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parId != null">
                par_id,
            </if>
            <if test="exampleId != null">
                example_id,
            </if>
            <if test="auditUserId != null">
                audit_user_id,
            </if>
            <if test="stepId != null">
                step_id,
            </if>
            <if test="auditState != null">
                audit_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parId != null">
                #{parId,jdbcType=INTEGER},
            </if>
            <if test="exampleId != null">
                #{exampleId,jdbcType=INTEGER},
            </if>
            <if test="auditUserId != null">
                #{auditUserId,jdbcType=INTEGER},
            </if>
            <if test="stepId != null">
                #{stepId,jdbcType=INTEGER},
            </if>
            <if test="auditState != null">
                #{auditState,jdbcType=CHAR},
            </if>
        </trim>
    </insert>

    <update id="updateAuditById" parameterType="java.util.Map">
        update t_archive_audit
        <set>
            <if test="auditState != null">
                audit_state = #{auditState,jdbcType=CHAR},
            </if>
            <if test="opinion != null">
                audit_opinion = #{opinion,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <sql id="Base_UserStepVo_List">
       SELECT
        aa.id AS archiveAuditId,
        aa.par_id AS preId,
        aa.step_id AS stepId,
        aa.state_time AS stateTimeString,
        u.user_name AS userName,
        ps.step_name AS stepName,
        aa.audit_state AS auditState,
        aa.audit_opinion AS opinion
    FROM
        `t_archive_audit` aa
    INNER JOIN a_user u ON (
        u.state = 'A'
        AND u.id = aa.audit_user_id
    )
    INNER JOIN t_process_steps ps ON (
        ps.state = 'A'
        AND ps.id = aa.step_id
    )
    WHERE
        aa.state = 'A'
  </sql>

    <select id="selectAuditByParId" resultType="org.jit.sose.domain.vo.UserStepArcVo" parameterType="java.lang.Integer">
        <include refid="Base_UserStepVo_List"/>
        AND aa.par_id = #{parId,jdbcType=INTEGER}
    </select>

    <select id="selectUserStep" resultType="org.jit.sose.domain.vo.UserStepArcVo" parameterType="java.util.Map">
        <include refid="Base_UserStepVo_List"/>
        AND aa.par_id = #{parId,jdbcType=INTEGER}
        AND aa.example_id = #{exampleId,jdbcType=INTEGER}
    </select>

    <select id="listAuditArchiveMyRemind" resultType="org.jit.sose.domain.vo.ListAuditArchiveVo"
            parameterType="java.lang.Integer">
    SELECT
      	aa.id AS archiveAuditId,
        aa.example_id AS exampleId,
        aep.process_id AS processId,
        aa.step_id AS nowStepId,
        aa.state_time AS stateTimeString,
        aep.user_id AS applyUserId,
        u.user_name AS applyUserName,
        ps.step_name AS nowStepName
    FROM
        `t_archive_audit` aa
    INNER JOIN t_archive_example_process aep ON (
        aep.state = 'A'
        AND aep.id = aa.example_id
        AND aep.is_enable = 1
        AND aep.audit_state = 'B'
    )
    INNER JOIN a_user u ON (
        u.state = 'A'
        AND u.id = aep.user_id
    )
    INNER JOIN t_process_steps ps ON (
        ps.id = aa.step_id
        AND ps.state = 'A'
    )
    WHERE
        aa.state = 'A'
    AND aa.audit_state = 'B'
    AND aa.audit_user_id = #{userId,jdbcType=INTEGER}
  </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_archive_audit
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_archive_audit
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.jit.sose.domain.entity.ArchiveAudit">
    insert into t_archive_audit (id, par_id, example_id, 
      audit_user_id, step_id, audit_state, 
      audit_opinion, state, state_time
      )
    values (#{id,jdbcType=INTEGER}, #{parId,jdbcType=INTEGER}, #{exampleId,jdbcType=INTEGER}, 
      #{auditUserId,jdbcType=INTEGER}, #{stepId,jdbcType=INTEGER}, #{auditState,jdbcType=CHAR}, 
      #{auditOpinion,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, #{stateTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="org.jit.sose.domain.entity.ArchiveAudit">
        insert into t_archive_audit
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="parId != null">
                par_id,
            </if>
            <if test="exampleId != null">
                example_id,
            </if>
            <if test="auditUserId != null">
                audit_user_id,
            </if>
            <if test="stepId != null">
                step_id,
            </if>
            <if test="auditState != null">
                audit_state,
            </if>
            <if test="auditOpinion != null">
                audit_opinion,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="stateTime != null">
                state_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="parId != null">
                #{parId,jdbcType=INTEGER},
            </if>
            <if test="exampleId != null">
                #{exampleId,jdbcType=INTEGER},
            </if>
            <if test="auditUserId != null">
                #{auditUserId,jdbcType=INTEGER},
            </if>
            <if test="stepId != null">
                #{stepId,jdbcType=INTEGER},
            </if>
            <if test="auditState != null">
                #{auditState,jdbcType=CHAR},
            </if>
            <if test="auditOpinion != null">
                #{auditOpinion,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=CHAR},
            </if>
            <if test="stateTime != null">
                #{stateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.jit.sose.domain.entity.ArchiveAudit">
        update t_archive_audit
        <set>
            <if test="parId != null">
                par_id = #{parId,jdbcType=INTEGER},
            </if>
            <if test="exampleId != null">
                example_id = #{exampleId,jdbcType=INTEGER},
            </if>
            <if test="auditUserId != null">
                audit_user_id = #{auditUserId,jdbcType=INTEGER},
            </if>
            <if test="stepId != null">
                step_id = #{stepId,jdbcType=INTEGER},
            </if>
            <if test="auditState != null">
                audit_state = #{auditState,jdbcType=CHAR},
            </if>
            <if test="auditOpinion != null">
                audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=CHAR},
            </if>
            <if test="stateTime != null">
                state_time = #{stateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.jit.sose.domain.entity.ArchiveAudit">
    update t_archive_audit
    set par_id = #{parId,jdbcType=INTEGER},
      example_id = #{exampleId,jdbcType=INTEGER},
      audit_user_id = #{auditUserId,jdbcType=INTEGER},
      step_id = #{stepId,jdbcType=INTEGER},
      audit_state = #{auditState,jdbcType=CHAR},
      audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      state_time = #{stateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>