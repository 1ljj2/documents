<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.jit.sose.mapper.ArchiveExampleProcessMapper" >
  <resultMap id="BaseResultMap" type="org.jit.sose.domain.entity.ArchiveExampleProcess" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_archive_name" property="userArchiveName" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="archive_template_id" property="archiveTemplateId" jdbcType="INTEGER" />
    <result column="process_id" property="processId" jdbcType="INTEGER" />
    <result column="audit_state" property="auditState" jdbcType="CHAR" />
    <result column="audit_opinion" property="auditOpinion" jdbcType="VARCHAR" />
    <result column="is_enable" property="isEnable" jdbcType="BIT" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="state_time" property="stateTime" jdbcType="TIMESTAMP" />
    <result column="leader_id" property="leaderId" jdbcType="INTEGER" />
	<result column="user_archive_number" property="userArchiveNumber" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ListFileMap" type="org.jit.sose.domain.vo.ListChargingArchiveVo">
  <id column="id" property="id" jdbcType="INTEGER" />
		<!--根据file的id获取文件的idList -->
		<collection property="fileIds" column="id"
			select="org.jit.sose.mapper.ArchiveExampleFileMapper.listFileIdByExampleId"></collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user_archive_name, user_id, archive_template_id, process_id, audit_state, audit_opinion, 
    is_enable, state, state_time
  </sql>

  <select id="selectUserStep" resultType="java.lang.String" parameterType="java.lang.Integer" >
    SELECT
        u.user_name
    FROM
        `t_archive_example_process` aep
    INNER JOIN a_user u ON (
        u.state = 'A'
        AND u.id = aep.user_id
    )
    WHERE
        aep.state = 'A'
    AND aep.id = #{exampleId,jdbcType=INTEGER}
  </select>
  
  <!-- 禁用系统档案 -->
  	<update id="disableArchiveExample" parameterType="java.lang.Integer">
		UPDATE t_archive_example_process
		SET is_enable = '0' , audit_state = 'D'
		WHERE
		id = #{id,jdbcType=INTEGER}
	</update>
  
  <!-- 根据【用户档案编号、用户档案名称、是否禁用、创建者、分页参数】筛选我的档案 -->
  <select id="listChargingArchiveByCondition" resultMap="ListFileMap"
  		  parameterType="org.jit.sose.domain.param.ListChargingArchiveParam">
	  SELECT DISTINCT
		aep.id AS id,
		aep.user_archive_number AS userArchiveNumber,
		aep.user_archive_name AS userArchiveName,
		aep.leader_id AS leaderId,
		aep.user_id AS userId,
		aep.archive_template_id AS archiveTemplateId,
		aep.process_id AS processId,
		aep.audit_state AS auditState,
		aep.audit_opinion AS auditOpinion,
		aep.is_enable AS isEnable,
		aep.state AS state,
		aep.state_time AS stateTimeString,
		au.user_name AS userName,
		au0.user_name AS leaderName,
		tp.process_name AS processName,
		tat.`name` AS archiveTemplateName
	FROM
		`t_archive_example_process` aep 
		LEFT JOIN a_user au ON (au.state !='X' AND au.id = aep.user_id)
		LEFT JOIN a_user au0 ON (au0.state !='X' AND au0.id = aep.leader_id)
		LEFT JOIN t_process tp ON (tp.state !='X' AND tp.id = aep.process_id)
		LEFT JOIN t_archive_template tat ON (tat.state != 'X' AND tat.id = aep.archive_template_id)
		LEFT JOIN t_archive_example_file aef ON ( aef.state = 'A' AND aep.id = aef.example_id)
	WHERE aep.state != 'X'
	<if test="userArchiveNumber != null and userArchiveNumber !=''">
        AND aep.user_archive_number LIKE CONCAT('%', #{userArchiveNumber,jdbcType=VARCHAR}, '%')
    </if>
    <if test="userArchiveName != null and userArchiveName!=''">
        AND aep.user_archive_name LIKE CONCAT('%', #{userArchiveName,jdbcType=VARCHAR}, '%')
    </if>
    <if test="leaderId != null and leaderId !=''">
        AND aep.leader_id = #{leaderId,jdbcType=INTEGER}
    </if>
	<if test="userId != null and userId !=''">
        AND aep.user_id = #{userId,jdbcType=INTEGER}
    </if>
	ORDER BY
		aep.state_time DESC
  </select>

  <!--新增或更新个人档案实体-->
  <insert id="insertOrUpdate" parameterType="org.jit.sose.domain.entity.ArchiveExampleProcess"
          useGeneratedKeys="true" keyProperty="id">
    insert into t_archive_example_process
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userArchiveName != null" >
        user_archive_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="archiveTemplateId != null" >
        archive_template_id,
      </if>
      <if test="processId != null" >
        process_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userArchiveName != null" >
        #{userArchiveName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveTemplateId != null" >
        #{archiveTemplateId,jdbcType=INTEGER},
      </if>
      <if test="processId != null" >
        #{processId,jdbcType=INTEGER},
      </if>
    </trim>
    ON DUPLICATE KEY UPDATE
    user_archive_name = #{userArchiveName,jdbcType=VARCHAR}
  </insert>

  <!--按照档案模板id和用户id查询-->
  <select id="selectByUserIdAndArchiveTemplateId" resultMap="BaseResultMap" parameterType="org.jit.sose.domain.entity.ArchiveExampleProcess" >
    select
    *
    from t_archive_example_process
    where 
    	archive_template_id = #{archiveTemplateId,jdbcType=INTEGER}
    and 
    	user_id = #{userId,jdbcType=INTEGER}
  </select>


  <insert id="addOneExample" useGeneratedKeys="true" keyProperty="id">
    insert into t_archive_example_process
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userArchiveName != null" >
        user_archive_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="leaderId != null">
        leader_id,
      </if>
      <if test="archiveTemplateId != null" >
        archive_template_id,
      </if>
      <if test="processId != null" >
        process_id,
      </if>
      <if test="auditState != null" >
        audit_state,
      </if>
      <if test="auditOpinion != null" >
        audit_opinion,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="stateTime != null" >
        state_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userArchiveName != null" >
        #{userArchiveName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="leaderId != null" >
        #{leaderId,jdbcType=INTEGER},
      </if>
      <if test="archiveTemplateId != null" >
        #{archiveTemplateId,jdbcType=INTEGER},
      </if>
      <if test="processId != null" >
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditOpinion != null" >
        #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="stateTime != null" >
        #{stateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <!-- 逆向工程生成部分 -->
  <insert id="insertSelective" parameterType="org.jit.sose.domain.entity.ArchiveExampleProcess"
          useGeneratedKeys="true" keyProperty="id">
    insert into t_archive_example_process
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userArchiveName != null" >
        user_archive_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="archiveTemplateId != null" >
        archive_template_id,
      </if>
      <if test="processId != null" >
        process_id,
      </if>
      <if test="auditState != null" >
        audit_state,
      </if>
      <if test="auditOpinion != null" >
        audit_opinion,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="stateTime != null" >
        state_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userArchiveName != null" >
        #{userArchiveName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveTemplateId != null" >
        #{archiveTemplateId,jdbcType=INTEGER},
      </if>
      <if test="processId != null" >
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditOpinion != null" >
        #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="stateTime != null" >
        #{stateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_archive_example_process
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_archive_example_process
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="org.jit.sose.domain.entity.ArchiveExampleProcess" >
    insert into t_archive_example_process (id, user_archive_name, user_id, 
      archive_template_id, process_id, audit_state, 
      audit_opinion, is_enable, state, 
      state_time)
    values (#{id,jdbcType=INTEGER}, #{userArchiveName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{archiveTemplateId,jdbcType=INTEGER}, #{processId,jdbcType=INTEGER}, #{auditState,jdbcType=CHAR}, 
      #{auditOpinion,jdbcType=VARCHAR}, #{isEnable,jdbcType=BIT}, #{state,jdbcType=CHAR}, 
      #{stateTime,jdbcType=TIMESTAMP})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="org.jit.sose.domain.entity.ArchiveExampleProcess" >
    update t_archive_example_process
    <set >
      <if test="userArchiveName != null" >
        user_archive_name = #{userArchiveName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="archiveTemplateId != null" >
        archive_template_id = #{archiveTemplateId,jdbcType=INTEGER},
      </if>
      <if test="processId != null" >
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="auditState != null" >
        audit_state = #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditOpinion != null" >
        audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="stateTime != null" >
        state_time = #{stateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jit.sose.domain.entity.ArchiveExampleProcess" >
    update t_archive_example_process
    set user_archive_name = #{userArchiveName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      archive_template_id = #{archiveTemplateId,jdbcType=INTEGER},
      process_id = #{processId,jdbcType=INTEGER},
      audit_state = #{auditState,jdbcType=CHAR},
      audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=BIT},
      state = #{state,jdbcType=CHAR},
      state_time = #{stateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>